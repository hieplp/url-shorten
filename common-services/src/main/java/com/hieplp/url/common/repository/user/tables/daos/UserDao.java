/*
 * This file is generated by jOOQ.
 */
package com.hieplp.url.common.repository.user.tables.daos;


import com.hieplp.url.common.repository.user.tables.User;
import com.hieplp.url.common.repository.user.tables.records.UserRecord;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;

import java.time.LocalDateTime;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class UserDao extends DAOImpl<UserRecord, com.hieplp.url.common.repository.user.tables.pojos.User, String> {

    /**
     * Create a new UserDao without any configuration
     */
    public UserDao() {
        super(User.USER, com.hieplp.url.common.repository.user.tables.pojos.User.class);
    }

    /**
     * Create a new UserDao with an attached configuration
     */
    public UserDao(Configuration configuration) {
        super(User.USER, com.hieplp.url.common.repository.user.tables.pojos.User.class, configuration);
    }

    @Override
    public String getId(com.hieplp.url.common.repository.user.tables.pojos.User object) {
        return object.getUserid();
    }

    /**
     * Fetch records that have <code>userId BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hieplp.url.common.repository.user.tables.pojos.User> fetchRangeOfUserid(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.USERID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>userId IN (values)</code>
     */
    public List<com.hieplp.url.common.repository.user.tables.pojos.User> fetchByUserid(String... values) {
        return fetch(User.USER.USERID, values);
    }

    /**
     * Fetch a unique record that has <code>userId = value</code>
     */
    public com.hieplp.url.common.repository.user.tables.pojos.User fetchOneByUserid(String value) {
        return fetchOne(User.USER.USERID, value);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hieplp.url.common.repository.user.tables.pojos.User> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<com.hieplp.url.common.repository.user.tables.pojos.User> fetchByUsername(String... values) {
        return fetch(User.USER.USERNAME, values);
    }

    /**
     * Fetch records that have <code>status BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hieplp.url.common.repository.user.tables.pojos.User> fetchRangeOfStatus(Byte lowerInclusive, Byte upperInclusive) {
        return fetchRange(User.USER.STATUS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>status IN (values)</code>
     */
    public List<com.hieplp.url.common.repository.user.tables.pojos.User> fetchByStatus(Byte... values) {
        return fetch(User.USER.STATUS, values);
    }

    /**
     * Fetch records that have <code>createdBy BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hieplp.url.common.repository.user.tables.pojos.User> fetchRangeOfCreatedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.CREATEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>createdBy IN (values)</code>
     */
    public List<com.hieplp.url.common.repository.user.tables.pojos.User> fetchByCreatedby(String... values) {
        return fetch(User.USER.CREATEDBY, values);
    }

    /**
     * Fetch records that have <code>createdAt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hieplp.url.common.repository.user.tables.pojos.User> fetchRangeOfCreatedat(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(User.USER.CREATEDAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>createdAt IN (values)</code>
     */
    public List<com.hieplp.url.common.repository.user.tables.pojos.User> fetchByCreatedat(LocalDateTime... values) {
        return fetch(User.USER.CREATEDAT, values);
    }

    /**
     * Fetch records that have <code>modifiedBy BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hieplp.url.common.repository.user.tables.pojos.User> fetchRangeOfModifiedby(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.MODIFIEDBY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modifiedBy IN (values)</code>
     */
    public List<com.hieplp.url.common.repository.user.tables.pojos.User> fetchByModifiedby(String... values) {
        return fetch(User.USER.MODIFIEDBY, values);
    }

    /**
     * Fetch records that have <code>modifiedAt BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.hieplp.url.common.repository.user.tables.pojos.User> fetchRangeOfModifiedat(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(User.USER.MODIFIEDAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modifiedAt IN (values)</code>
     */
    public List<com.hieplp.url.common.repository.user.tables.pojos.User> fetchByModifiedat(LocalDateTime... values) {
        return fetch(User.USER.MODIFIEDAT, values);
    }
}
